\hypertarget{fonctionAllocations_8c}{}\doxysection{fonction\+Allocations.\+c File Reference}
\label{fonctionAllocations_8c}\index{fonctionAllocations.c@{fonctionAllocations.c}}
{\ttfamily \#include $<$stdio.\+h$>$}\newline
{\ttfamily \#include $<$stdlib.\+h$>$}\newline
{\ttfamily \#include \char`\"{}includes.\+h\char`\"{}}\newline
Include dependency graph for fonction\+Allocations.\+c\+:
% FIG 0
This graph shows which files directly or indirectly include this file\+:
% FIG 1
\doxysubsection*{Functions}
\begin{DoxyCompactItemize}
\item 
int \mbox{\hyperlink{fonctionAllocations_8c_aedc7d379c7c48c6b8ee50148a625359f}{taille\+Octet}} (int n\+Bytes)
\item 
int \mbox{\hyperlink{fonctionAllocations_8c_aa911738d50f1085d11d442fa7b14db61}{init\+Memory}} (int n\+Bytes)
\item 
int \mbox{\hyperlink{fonctionAllocations_8c_a8d862dc01c44bfabc8d952bb77f8da89}{free\+Memory}} ()
\item 
void $\ast$ \mbox{\hyperlink{fonctionAllocations_8c_a3562ee5994dd38c99e0489a3d484d4b2}{myalloc}} (int n\+Bytes)
\item 
int \mbox{\hyperlink{fonctionAllocations_8c_af83d1716fd1dd28910e85c83599d421f}{myfree}} (void $\ast$p)
\item 
void $\ast$ \mbox{\hyperlink{fonctionAllocations_8c_aeb22c7bbd410c7bebddb5bc707b18345}{bloc\+Libre}} (int n\+Bytes)
\item 
void \mbox{\hyperlink{fonctionAllocations_8c_abb9eddf5fdf302927569f3de141f1afb}{afficher\+Allocation}} ()
\item 
void $\ast$ \mbox{\hyperlink{fonctionAllocations_8c_a704a62eabe282c4bfd0091046fd6eecb}{rechercher\+Allocation}} (void $\ast$p)
\end{DoxyCompactItemize}


\doxysubsection{Function Documentation}
\mbox{\Hypertarget{fonctionAllocations_8c_abb9eddf5fdf302927569f3de141f1afb}\label{fonctionAllocations_8c_abb9eddf5fdf302927569f3de141f1afb}} 
\index{fonctionAllocations.c@{fonctionAllocations.c}!afficherAllocation@{afficherAllocation}}
\index{afficherAllocation@{afficherAllocation}!fonctionAllocations.c@{fonctionAllocations.c}}
\doxysubsubsection{\texorpdfstring{afficherAllocation()}{afficherAllocation()}}
{\footnotesize\ttfamily void afficher\+Allocation (\begin{DoxyParamCaption}{ }\end{DoxyParamCaption})}

cette fonction affiche les adresses de debut des allocations effectué, sur notre zone de memoire \mbox{\Hypertarget{fonctionAllocations_8c_aeb22c7bbd410c7bebddb5bc707b18345}\label{fonctionAllocations_8c_aeb22c7bbd410c7bebddb5bc707b18345}} 
\index{fonctionAllocations.c@{fonctionAllocations.c}!blocLibre@{blocLibre}}
\index{blocLibre@{blocLibre}!fonctionAllocations.c@{fonctionAllocations.c}}
\doxysubsubsection{\texorpdfstring{blocLibre()}{blocLibre()}}
{\footnotesize\ttfamily void$\ast$ bloc\+Libre (\begin{DoxyParamCaption}\item[{int}]{n\+Bytes }\end{DoxyParamCaption})}

cette fonction recherche un bloc de memoire liberer suite à la suppression d\textquotesingle{}une allocation Ce bloc servira pour faire une nouvelle allocation dans la zone de memoire \mbox{\Hypertarget{fonctionAllocations_8c_a8d862dc01c44bfabc8d952bb77f8da89}\label{fonctionAllocations_8c_a8d862dc01c44bfabc8d952bb77f8da89}} 
\index{fonctionAllocations.c@{fonctionAllocations.c}!freeMemory@{freeMemory}}
\index{freeMemory@{freeMemory}!fonctionAllocations.c@{fonctionAllocations.c}}
\doxysubsubsection{\texorpdfstring{freeMemory()}{freeMemory()}}
{\footnotesize\ttfamily int free\+Memory (\begin{DoxyParamCaption}{ }\end{DoxyParamCaption})}

cette fonction libere l\textquotesingle{}espace memoire de travaille interne et retourne la taille initialement alloué \mbox{\Hypertarget{fonctionAllocations_8c_aa911738d50f1085d11d442fa7b14db61}\label{fonctionAllocations_8c_aa911738d50f1085d11d442fa7b14db61}} 
\index{fonctionAllocations.c@{fonctionAllocations.c}!initMemory@{initMemory}}
\index{initMemory@{initMemory}!fonctionAllocations.c@{fonctionAllocations.c}}
\doxysubsubsection{\texorpdfstring{initMemory()}{initMemory()}}
{\footnotesize\ttfamily int init\+Memory (\begin{DoxyParamCaption}\item[{int}]{n\+Bytes }\end{DoxyParamCaption})}

cette fonction retourne un pointeur ($\ast$espace\+Memoire\+Debut) de type void sur l\textquotesingle{}espace memoire de travail interne \mbox{\Hypertarget{fonctionAllocations_8c_a3562ee5994dd38c99e0489a3d484d4b2}\label{fonctionAllocations_8c_a3562ee5994dd38c99e0489a3d484d4b2}} 
\index{fonctionAllocations.c@{fonctionAllocations.c}!myalloc@{myalloc}}
\index{myalloc@{myalloc}!fonctionAllocations.c@{fonctionAllocations.c}}
\doxysubsubsection{\texorpdfstring{myalloc()}{myalloc()}}
{\footnotesize\ttfamily void$\ast$ myalloc (\begin{DoxyParamCaption}\item[{int}]{n\+Bytes }\end{DoxyParamCaption})}

cette fonction alloue de la memoire sur notre zone de memoire interne On verifie si aucune allocation n\textquotesingle{}a été faite. si O\+UI on fait la premiere allocation

Si non on cherche la derniere allocation dans notre liste Puis on ajoute la nouvelle allocation apres celle ci\mbox{\Hypertarget{fonctionAllocations_8c_af83d1716fd1dd28910e85c83599d421f}\label{fonctionAllocations_8c_af83d1716fd1dd28910e85c83599d421f}} 
\index{fonctionAllocations.c@{fonctionAllocations.c}!myfree@{myfree}}
\index{myfree@{myfree}!fonctionAllocations.c@{fonctionAllocations.c}}
\doxysubsubsection{\texorpdfstring{myfree()}{myfree()}}
{\footnotesize\ttfamily int myfree (\begin{DoxyParamCaption}\item[{void $\ast$}]{p }\end{DoxyParamCaption})}

cette fonction permet de liberer une allocation faite dans notre zone de memoire \mbox{\Hypertarget{fonctionAllocations_8c_a704a62eabe282c4bfd0091046fd6eecb}\label{fonctionAllocations_8c_a704a62eabe282c4bfd0091046fd6eecb}} 
\index{fonctionAllocations.c@{fonctionAllocations.c}!rechercherAllocation@{rechercherAllocation}}
\index{rechercherAllocation@{rechercherAllocation}!fonctionAllocations.c@{fonctionAllocations.c}}
\doxysubsubsection{\texorpdfstring{rechercherAllocation()}{rechercherAllocation()}}
{\footnotesize\ttfamily void$\ast$ rechercher\+Allocation (\begin{DoxyParamCaption}\item[{void $\ast$}]{p }\end{DoxyParamCaption})}

cette fonction affiche les adresses de debut des allocations effectué, sur notre zone de memoire \mbox{\Hypertarget{fonctionAllocations_8c_aedc7d379c7c48c6b8ee50148a625359f}\label{fonctionAllocations_8c_aedc7d379c7c48c6b8ee50148a625359f}} 
\index{fonctionAllocations.c@{fonctionAllocations.c}!tailleOctet@{tailleOctet}}
\index{tailleOctet@{tailleOctet}!fonctionAllocations.c@{fonctionAllocations.c}}
\doxysubsubsection{\texorpdfstring{tailleOctet()}{tailleOctet()}}
{\footnotesize\ttfamily int taille\+Octet (\begin{DoxyParamCaption}\item[{int}]{n\+Bytes }\end{DoxyParamCaption})}

